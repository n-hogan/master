@{
    ViewBag.Title = "Index";
}

@model Website.Models.PersonViewModel


@section JavaScript{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var vm = new ProductsViewModel();

        function ProductsViewModel() {
            var self = this;
            self.people = ko.observableArray();

            var baseUri = '/odata/People';

            self.create = function(formElement) {
                
                alert(formElement);
                // If valid, post the serialized form data to the web api
                $(formElement).validate();
                if ($(formElement).valid()) {
                    $.post(baseUri, $(formElement).serialize(), null, "json");
                }

            }


            self.update = function(person) {
                
                $.ajax({ type: "PUT", url: baseUri + '/(' + person.Id + ')', data: person });
            }

            self.remove = function(person) {
                
                // First remove from the server, then from the UI
                $.ajax({ type: "DELETE", url: baseUri + '/(' + person.Id + ')' })
                    .done(function() { self.people.remove(person); });
            }

            $.getJSON('/odata/People', function(data) {
                
                self.people(ko.utils.arrayMap(data.value, function(person) {

                    return person;
                }));
            });

            
        }


        $(document).ready(function() {
            ko.applyBindings(vm);

            peopleHub.client.addPersonToPage = function(person) {
                debugger;
                vm.people.push(person);


            };

            peopleHub.client.lockForEdit = function (person) {
                debugger;
                ko.utils.arrayFirst(vm.people, function (item) {
                    debugger;
                    if (person.id === item.id) {
                        item.Locked = true;
                    }
                });
            };
        });


        var peopleHub = $.connection.peopleHub;
        $.connection.hub.start().done(function() {});
  


    </script>
   
}

<p>Test</p>

<div class="content">
    <div class="float-left">
        <ul id="update-people" data-bind="foreach: people">
            <li>
                <div>
                    <div class="item">Person ID</div> <span data-bind="text: $data.Id"></span>
                </div>
                <div>
                    <div class="item">Name</div>
                    <input type="text" data-bind="value: $data.Name, enable: $data.Locked" />
                    <input type="text" data-bind="event: { mouseover: function(data, event) { debugger; peopleHub.server.lock($data); }}, value: $data.Name, enable: !$data.Locked" />
                </div>
                <div>
                    <input type="button" value="Update" data-bind="click: $root.update" />
                    <input type="button" value="Delete Item" data-bind="click: $root.remove" />
                </div>
            </li>
        </ul>
    </div>

    <div class="float-right">
        <h2>Add New Person</h2>
        <form id="addPerson" data-bind="submit: create">
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Contact</legend>
                @Html.EditorFor(x=>x.Name)
                
                <p>
                    <input type="submit" value="Save" />
                </p>
            </fieldset>
        </form>
    </div>
</div>








